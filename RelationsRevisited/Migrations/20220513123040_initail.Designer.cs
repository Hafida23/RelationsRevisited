// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RelationsRevisited.Data;

namespace RelationsRevisited.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220513123040_initail")]
    partial class initail
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RelationsRevisited.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            Name = "IT"
                        },
                        new
                        {
                            DepartmentId = 2,
                            Name = "HR"
                        });
                });

            modelBuilder.Entity("RelationsRevisited.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeCvId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeCvId")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            DepartmentId = 1,
                            EmployeeCvId = 1,
                            FirstName = "kenan",
                            LastName = "Kurda"
                        },
                        new
                        {
                            EmployeeId = 2,
                            DepartmentId = 2,
                            EmployeeCvId = 3,
                            FirstName = "Pearl",
                            LastName = "De Smet"
                        });
                });

            modelBuilder.Entity("RelationsRevisited.Models.EmployeeCv", b =>
                {
                    b.Property<int>("EmployeeCvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeCvId");

                    b.ToTable("EmployeeCvs");

                    b.HasData(
                        new
                        {
                            EmployeeCvId = 1,
                            Title = ".Net Developer"
                        },
                        new
                        {
                            EmployeeCvId = 2,
                            Title = "Java Developer"
                        },
                        new
                        {
                            EmployeeCvId = 3,
                            Title = "administratief medewerker"
                        });
                });

            modelBuilder.Entity("RelationsRevisited.Models.Employee_Skills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("SkillsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SkillsId");

                    b.ToTable("Employee_Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            SkillsId = 1
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 2,
                            SkillsId = 2
                        });
                });

            modelBuilder.Entity("RelationsRevisited.Models.Skills", b =>
                {
                    b.Property<int>("SkillsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SkillsDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SkillsId");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            SkillsId = 1,
                            SkillsDescription = "C#,Sql,......"
                        },
                        new
                        {
                            SkillsId = 2,
                            SkillsDescription = "Administratie ervaring...."
                        });
                });

            modelBuilder.Entity("RelationsRevisited.Models.Employee", b =>
                {
                    b.HasOne("RelationsRevisited.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RelationsRevisited.Models.EmployeeCv", "EmployeeCv")
                        .WithOne("Employee")
                        .HasForeignKey("RelationsRevisited.Models.Employee", "EmployeeCvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RelationsRevisited.Models.Employee_Skills", b =>
                {
                    b.HasOne("RelationsRevisited.Models.Employee", "Employee")
                        .WithMany("Employees_Skills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RelationsRevisited.Models.Skills", "Skills")
                        .WithMany("Employees_Skills")
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
